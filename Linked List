#include<stdio.h>
#include<stdlib.h>
void finsert();
void linsert();
void fdelete();
void ldelete();
void random();
void display();

struct node
{
    int data;
    struct node *next;
};
struct node *h=NULL;

int main()
{
    int ch;
    while(1)
    {
        printf("1:F-Insert\n 2:L-Insert\n 3:F-Delete\n  4:L-Delete\n 5:Random\n 6:Display\n7:Exit\n");
        printf("Enter choice:");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1: finsert();
                    break;
            case 2: linsert();
                    break;
            case 3: fdelete();
                    break;
            case 4: ldelete();
                    break;
            case 5: random();
                    break;
            case 6: display();
                    break;
            case 7: exit(0);
                    break;
        }
    }
    return 0;
}


void finsert()
{
    struct node *temp=(struct node *)malloc(sizeof(struct node));
    int ele;
    printf("Enter data:");
    scanf("%d",&data);
    temp->data=ele;
    temp->next=NULL;
    if(h==NULL)
    {
        h=temp;
    }
    else
    {
        temp->next=h;
        h=temp;
    }
    printf("%d inserted at begin",ele);
}

void linsert()
{
     struct node *temp=(struct node *)malloc(sizeof(struct node));
    int ele;
    printf("Enter data:");
    scanf("%d",&data);
    temp->data=ele;
    temp->next=NULL;
    if(h==NULL)
    {
        h=temp;
    }
    else
    {
        struct node *p=h;
        while(p->next!=NULL)
        {
            p=p->next;
        }
        p->next=temp;
    }
    printf("%d inserted at the end",ele);
}

void display()
{
    struct node *temp=h;
    if(temp==NULL)
    {
        printf("\n Underflow");
    }
    else
    {
        while(temp!=NULL)
        {
            printf("%\t",temp->val);
            temp=temp->next;
        }
    }
}

void fdelete()
{
    if(h==NULL)
    {
        printf("\n Underflow");
    }
    else
    {
        struct node *temp=h;
        h=temp->next;
        free(temp);
    }
    printf("element deleted from begin");
}

void ldelete()
{
    if(h==NULL)
    {
        printf("\n Underflow");
    }
    else
    {
        struct node *temp=h,*q;
        while(temp!->next=NULL)
        {
            q=temp;
            temp=temp->next;
        }
        q->next=NULL;
    }
    printf("element deleted at end");
}

void random()
{
    if(h==NULL)
    {
        printf("\n Underflow");
    }
    else
    {
        struct node *temp=h,*q;
        int loc;
        printf("\n Enter location:");
        scanf("%d",&loc);
        for(int i=0;i<loc;i++)
        {
            q=temp;
            temp=temp->next;
            if(temp==NULL)
            {
                printf("\n cant delete");
                return;
            }
        }
        q->next=temp->next;
        free(temp);
        printf("\n deleted node %d",loc+1);
        
    }
}
